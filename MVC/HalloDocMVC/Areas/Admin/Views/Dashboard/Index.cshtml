@using HalloDocService.ViewModels;
@model AdminDashboardViewModel;
@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_AdminDashboard.cshtml";
    <link rel="stylesheet" href="~/css/AdminDashboard.css" />
}

<main class="mt-md-5 mt-3">
    <div class="container-fluid p-4 mt-3">

        @* Cards HTML *@
        <div class="row row-cols-2 row-cols-sm-3 row-cols-md-3 row-cols-lg-4 row-cols-xl-6 g-4">
            <div class="col newUserTip active-col">
                <div class="card p-2 ps-4 newUserCard active" id="newUserCard" data-action="new">
                    <div class="card-head ">
                        <h5> <i class="far fa-newspaper"></i> New</h5>
                    </div>
                    <div>
                        <h3 class="fw-bold">@Model.NewState</h3>
                    </div>
                </div>
            </div>
            <div class="col pendingUserTip">
                <div class="card p-2 ps-4 pendingUserCard" id="pendingUserCard" data-action="pending">
                    <div class="card-head">
                        <h5><i class="fas fa-user-md"></i> Pending</h5>
                    </div>
                    <div>
                        <h3 class="fw-bold">@Model.PendingState</h3>
                    </div>
                </div>
            </div>
            <div class="col activeUserTip">
                <div class="card p-2 ps-4 activeUserCard" id="activeUserCard" data-action="active">
                    <div class="card-head">
                        <h5> <i class="fas fa-check"></i> Active</h5>
                    </div>
                    <div>
                        <h3 class="fw-bold">@Model.ActiveState</h3>
                    </div>
                </div>
            </div>
            <div class="col concludeUserTip">
                <div class="card p-2 ps-4 concludeUserCard" id="concludeUserCard" data-action="conclude">
                    <div class="card-head">
                        <h5><i class="fas fa-history"></i> Conclude</h5>
                    </div>
                    <div>
                        <h3 class="fw-bold">@Model.ConcludeState</h3>
                    </div>
                </div>
            </div>
            <div class="col closeUserTip">
                <div class="card p-2 ps-4 closeUserCard" id="closeUserCard" data-action="close">
                    <div class="card-head">
                        <h5><i class="fas fa-user-times"></i> To Close</h5>
                    </div>
                    <div>
                        <h3 class="fw-bold">@Model.ToCloseState</h3>
                    </div>
                </div>
            </div>
            <div class="col unpaidUserTip">
                <div class="card p-2 ps-4 unpaidUserCard" id="unpaidUserCard" data-action="unpaid">
                    <div class="card-head">
                        <h5> <i class="fas fa-dollar-sign"></i> Unpaid</h5>
                    </div>
                    <div>
                        <h3 class="fw-bold">@Model.UnPaidState</h3>
                    </div>
                </div>
            </div>
        </div>

        @* Rest of Code *@
        <section class="mt-5">
            @* Head & buttons *@
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h4 style="white-space: nowrap;">Patient <small id="showStatus" class="text-muted">(New)</small>
                    </h4>
                </div>
                <div class="feature-btns">
                    <button class="btn secondary-theme-btn" data-bs-toggle="modal" data-bs-target="#sendMailModal">
                        <i class="far fa-paper-plane "></i> <span class="d-none d-md-inline">Send Link</span>
                    </button>
                    <button class="btn secondary-theme-btn">
                        <i class="far fa-sticky-note"></i> <span class="d-none d-md-inline">Create Request</span>
                    </button>
                    <button class="btn secondary-theme-btn">
                        <i class="fas fa-file-export"></i> <span class="d-none d-md-inline">Exports
                        </span> </button>
                    <button class="btn secondary-theme-btn">
                        <i class="fa-regular fa-share-from-square"></i> <span class="d-none d-md-inline">Exports
                            All</span>
                    </button>
                    <button class="btn secondary-theme-btn" data-bs-toggle="modal" data-bs-target="#reqSupportModal">
                        <i class="fas fa-user-alt"></i> <span class="d-none d-md-inline">Request DTY Support</span>
                    </button>
                </div>
            </div>

            @* Tables *@
            <div class="mt-3">
                <div class="row g-2">
                    <div class="col-md-6 d-flex gap-2 flex-sm-row flex-column">
                        <div class="form-group has-search">
                            <span class="fa fa-search form-control-feedback"></span>
                            <input type="text" id="searchKeyword" class="form-control"
                                placeholder="Search By Patient Name" oninput="debounce(searchByKeyword, 500)">
                        </div>
                        <div class="form-group has-search">
                            <span class="fa fa-search form-control-feedback"></span>
                            <select class="form-control form-select" id="regionDropdown">
                                <option value="all" selected>All Regions</option>
                                @foreach(var item in Model.RegionList){
                                    <option value="@item.Id">@item.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div
                        class="col-md-6 table-info-btn border-sm-top d-flex justify-content-between align-items-center">
                        <button class="btn" onclick="getAllRecords()"">All</button>
                        <a id="patient-only" href="#" onclick="getOnlyPatient()"><span class="dot green-dot"></span>
                            Patient</a>
                        <a id="family-only" href="#" onclick="getOnlyFamily()"><span class="dot orange-dot"></span>
                            Family/Friend</a>
                        <a id="concierge-only" href="#" onclick="getOnlyConcierge()"><span class="dot blue-dot"></span>
                            Concierge</a>
                        <a id="business-only" href="#" onclick="getOnlyBusiness()"><span class="dot pink-dot"></span>
                            Business</a>
                        <a href="#"><span class="dot purple-dot"></span> VIP</a>
                    </div>

                    <div id="render-content">
                        @* <partial name="_AdminDashboardTable.cshtml" model="@Model"/> *@
                        @Html.Partial("_AdminDashboardTable", Model)
                        @* @{ await Html.RenderPartialAsync("_AdminDashboardTable"); } *@
                    </div>

                </div>
            </div>
        </section>
    </div>
</main>

@* Request Support Modal *@
<div class="modal fade shadow-lg " id="reqSupportModal" tabindex="-1" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #01bce9;">
                <h1 class="modal-title fs-5 text-light" id="exampleModalLabel">Request Support</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <small class="text-muted">To all unscedule physician: we are short on coverage and needs additional
                    supports on call to respond to Requests.</small>
                <div class="form-floating mt-2">
                    <textarea class="form-control" placeholder="Leave a comment here" id="Symptoms"
                        style="height: 100px"></textarea>
                    <label for="Symptoms" style="white-space: normal;">Message</label>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn secondary-theme-btn">Confirm</button>
                <button type="button" class="btn theme-btn" data-bs-dismiss="modal">Cancle</button>
            </div>
        </div>
    </div>
</div>

@* Send Mail Modal *@
<div class="modal fade shadow-lg " id="sendMailModal" tabindex="-1" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header" style="background-color: #01bce9;">
                <h1 class="modal-title fs-5 text-light" id="exampleModalLabel">Send Mail To Patient For Submitting
                    Request </h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <div class="form-floating ">
                        <input type="text" class="form-control" id="fname" placeholder="first name">
                        <label for="floatingInput">First Name</label>
                    </div>
                    <span class="text-danger"></span>
                </div>
                <div class=" mb-3">
                    <div class="form-floating ">
                        <input type="text" class="form-control" id="lname" placeholder="last name">
                        <label for="floatingInput">Last Name</label>
                    </div>
                    <span class="text-danger"></span>
                </div>
                <div class=" mb-3">
                    <div class="form-floating ">
                        <input type="email" class="form-control" id="Email" placeholder="email"
                            oninput="debounce(verifyEmail, 2000)">
                        <label for="Email">Email</label>
                    </div>
                    <span class="text-danger" id="email-valid"></span>
                </div>
                <div class=" mb-3">
                    <div class="form-floating">
                        <input id="Mobile" class="form-control" type="tel" name="Mobile" />
                        <input type="hidden" id="phone_hidden" name="full_phone" />
                    </div>
                    <span class="text-danger" id="mobile-valid"></span>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn secondary-theme-btn">Confirm</button>
                <button type="button" class="btn theme-btn" data-bs-dismiss="modal">Cancle</button>
            </div>
        </div>
    </div>
</div>

<script>
    
    let params, tabData, searchKeyword=null, reqTypes=null, pageNum = 1,pageRecord = 5;

    $(".card").click(function () {
        let action = $(this).data('action');
        let showStatus = document.querySelector("#showStatus");
        showStatus.innerHTML = `(${action})`;

        $(".card").removeClass("active");
        $(".col").removeClass("active-col");

        $(this).addClass("active");
        $(this).closest(".col").addClass("active-col");

        switch (action) {
            case "new":
                params = { status: "new" };
                break;
            case "pending":
                params = { status: "pending" };
                break;
            case "active":
                params = { status: "active" };
                break;
            case "conclude":
                params = { status: "conclude" };
                break;
            case "close":
                params = { status: "close" };
                break;
            case "unpaid":
                params = { status: "unpaid" };
                break;
            default:
                params = { status: "new" };
                break;
        }
        makeAjaxRequest(`/admin/dashboard/Index?pageNumber=${pageNum}&pageSize=${pageRecord}`, params);
    })
    let timeoutId;
    function debounce(func, delay) {
        clearTimeout(timeoutId);
        timeoutId = setTimeout(func, delay);
    }
    function searchByKeyword() {
        searchKeyword = document.getElementById("searchKeyword").value.toLowerCase();
        pageNum = 1;
        pageRecord = 5;
        makeAjaxRequest(`/admin/dashboard?searchBy=${searchKeyword}&requesttype=${reqTypes}&pageNumber=${pageNum}&pageSize=${pageRecord}`, params);
    }

    const getOnlyPatient = () => {
        $(".dot").closest("a").removeClass("fw-bold")
        $("#patient-only").addClass("fw-bold");
        findFunction(1);
    }
    const getOnlyFamily = () => {
        $(".dot").closest("a").removeClass("fw-bold")
        $("#family-only").addClass("fw-bold");
        findFunction(2);
    }
    const getOnlyConcierge = () => {
        $(".dot").closest("a").removeClass("fw-bold")
        $("#concierge-only").addClass("fw-bold");
        findFunction(3);
    }
    const getOnlyBusiness = () => {
        $(".dot").closest("a").removeClass("fw-bold")
        $("#business-only").addClass("fw-bold");
        findFunction(4);
    }

    const findFunction = (reqTypeId) => {
        reqTypes = reqTypeId;
        pageNum = 1;
        pageRecord = 5;
        if(searchKeyword){
            makeAjaxRequest(`/admin/dashboard/Index?searchBy=${searchKeyword}&requesttype=${reqTypeId}&pageNumber=${pageNum}&pageSize=${pageRecord}`, params);
        }else{
            makeAjaxRequest(`/admin/dashboard/Index?requesttype=${reqTypeId}&pageNumber=${pageNum}&pageSize=${pageRecord}`,params);
        }
    }

    const getAllRecords = ()=>{
        reqTypes = 0;
        pageNum = 1;
        pageRecord = 5;
        $(".dot").closest("a").removeClass("fw-bold")
        makeAjaxRequest(`/admin/dashboard/Index?pageNumber=${pageNum}&pageSize=${pageRecord}`, params);
    }

    function makeAjaxRequest(url, requestData) {
        $.ajax({
            url: url,
            type: 'GET',
            data: requestData,
            success: function (response) {
                $('#render-content').empty();
                $('#render-content').html(response);
                tabData = response;
            },
            error: function () {
                console.log('Error occurred');
            }
        });
    }

    function pageChange() {
        
        searchKeyword = document.getElementById("searchKeyword").value.toLowerCase();
        const pageChange = document.querySelector(".pageChange");
        pageNum = pageChange.value;
        makeAjaxRequest(`/admin/dashboard/Index?searchBy=${searchKeyword}&requesttype=${reqTypes}&pageNumber=${pageNum}&pageSize=${pageRecord}`, params);
    }

    function pageRecordChange(){
        pageNum = 1;
        searchKeyword = document.getElementById("searchKeyword").value.toLowerCase();
        const pageRecordChange = document.querySelector(".pageRecordChange");
        pageRecord = pageRecordChange.value;
        makeAjaxRequest(`/admin/dashboard/Index?searchBy=${searchKeyword}&requesttype=${reqTypes}&pageNumber=${pageNum}&pageSize=${pageRecord}`, params);
    }
</script>
