<style>
    .pink-bg{
        background-color: #ffacf5 !important;
        cursor: pointer;
    }
    .green-bg{
        background-color: #aacba8 !important;
        cursor: pointer;
    }
</style>
<div class="table-responsive">
            <table class="table table-bordered">
                <thead>
                    <tr class="main-head">
                        <th scope="col">Staff</th>
                        @foreach (var shiftTime in Enumerable.Range(0, 24))
                        {
                            <th scope="col">@DateTime.Today.AddHours(shiftTime).ToString("h tt")</th>
                        }
                    </tr>
                    <tr class="coverage">
                        <td>Coverage</td>
                        @foreach (var item in Enumerable.Range(0, 24))
                        {
                            <th scope="col"></th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var provider in Model.AllProvidersList)
                    {
                        <tr>
                            <td scope="row" class="d-flex" style="white-space:nowrap;">
                                @if (!string.IsNullOrEmpty(provider.PhotoPath))
                                {
                                    <img src="~/@provider.PhotoPath" class="me-2" />
                                }
                                else
                                {
                                    <i class="fa-regular fa-user me-2"></i>
                                }
                                @provider.FullName
                            </td>
                            @{
                                bool isProvider = false;
                                foreach (var shift in Model.AllShiftList)
                                {
                                    if (shift.ProviderId == provider.Id)
                                    {
                                        isProvider = true;
                                        break;
                                    }
                                }
                            }
                            @foreach (int shiftTime in Enumerable.Range(0, 24))
                            {
                                var shiftMatched = false;
                                short status = 1;
                                string StartingTime = "";
                                string EndingTime = "";
                                int shiftId = 0;
                                @foreach (var shift in Model.AllShiftList)
                                {
                                    if (shift.ProviderId == provider.Id && shift.StartTimeHour <= shiftTime && 
                    shift.EndTimeHour >= shiftTime)
                                    {
                                        shiftMatched = true;
                                        status = shift.Status;
                                        StartingTime = shift.StartTimeHour.ToString() + ":" + shift.StartTimeMinute.ToString();
                                        EndingTime = shift.EndTimeHour.ToString() + ":" + shift.EndTimeMinute.ToString();
                                        shiftId = shift.Id;
                                        break;
                                    }
                                }
                                if(shiftMatched){
                                    if(status == 1){
                                        <td scope="col" id="@shiftId-@shiftTime" class="pink-bg" title="@StartingTime - @EndingTime"> <small class="text-muted"></small> </td>
                                    }else if(status == 2){
                                        <td scope="col" class="green-bg" title="@StartingTime - @EndingTime"></td>
                                    }
                                }else{
                                    <td scope="col" ></td>
                                }
                                
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>