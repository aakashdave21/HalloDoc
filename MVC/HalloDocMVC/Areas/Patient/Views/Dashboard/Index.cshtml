@model DashboardViewModel;
@{
    ViewData["Title"] = "Submit Request Page";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<style>
    .blocked-req td{
        background: none !important;
    }
    .blocked-req{
        background: #c1c1c178;
    }
</style>

<main class="container-fluid-sm p-sm-5 p-2">
    <h2 class="mt-5">Medical History</h1>

        <div class="concierge-request-form border p-4 mt-3 mb-3 rounded shadow">
            <div class="d-flex justify-content-end">
                <button type="button" class="btn theme-btn" data-bs-toggle="modal" data-bs-target="#exampleModal">Create
                    New Request</button>
            </div>

            <div class="table-responsive d-md-block d-none">
                <table id="myTable" class="table table-striped" style="width:100%">
                    <thead>
                        <tr>
                            <th class="sortable asc" style="white-space: nowrap;">Created Date <i class="fa-solid fa-chevron-up sorting-icons"></i> </th>
                            <th style="white-space: nowrap;">Current Status</th>
                            <th style="white-space: nowrap;">Document</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var item in Model.UserRequests){
                            if(Model.GetUserRequestType(item.Status) == "Blocked"){
                                <tr class="blocked-req">
                                    <td class="created-date" style="white-space: nowrap;">@(((DateTime)item.Createdat).ToString("MMM dd, yyyy"))</td>
                                    <td>@Model.GetUserRequestType(item.Status)</td>
                                    <td>
                                        
                                    </td>
                                </tr>
                            }else{
                                <tr >
                                <td class="created-date" style="white-space: nowrap;">@(((DateTime)item.Createdat).ToString("MMM dd, yyyy"))</td>
                                <td>@Model.GetUserRequestType(item.Status)</td>
                                <td>
                                    @{
                                        if(@item.NoOfRequest > 0){
                                            using(Html.BeginForm("Documents", "Dashboard", new { area = "Patient" }, FormMethod.Post)){
                                                <input type="hidden" name="RequestId" value="@item.Id"/>
                                                <button type="submit" class="btn theme-btn" style="white-space: nowrap;"> (<span>@item.NoOfRequest</span>) Document </button>
                                            }
                                        }
                                    }
                                    
                                </td>
                            </tr>
                            }
                            
                        }
                    </tbody>
                </table>
            </div>

            <div class="d-md-none mt-4">
     @if ((Model.UserRequests).Any())
    {
        @foreach (var item in Model.UserRequests)
        {
            <div class="accordion" id="accordian-@item.Id">
                <div class="accordion-item">
                    <h2 class="accordion-header">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                            data-bs-target="#panelsStayOpen-collapse-@item.Id" aria-expanded="false">
                            <div class="d-flex flex-column w-100">
                                <p>Created Date : @(((DateTime)item.Createdat).ToString("MMM dd, yyyy"))</p>
                            </div>
                        </button>
                    </h2>
                    <div id="panelsStayOpen-collapse-@item.Id" class="accordion-collapse collapse">
                        <div class="accordion-body">
                            <div class="d-flex flex-column w-100">
                                <p>Current Status : @Model.GetUserRequestType(item.Status)</p>
                                @{
                                        if(@item.NoOfRequest > 0){
                                            using(Html.BeginForm("Documents", "Dashboard", new { area = "Patient" }, FormMethod.Post)){
                                                <input type="hidden" name="RequestId" value="@item.Id"/>
                                                <button type="submit" class="btn theme-btn" style="white-space: nowrap;"> (<span>@item.NoOfRequest</span>) Document </button>
                                            }
                                        }
                                    }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <p class="text-center border-bottom border-top p-2">No Records Found</p>
    }
</div>

        </div>
</main>

<!-- Modal -->
<div class="modal fade shadow-lg " id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5 text-light" id="exampleModalLabel">Create New Request</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Here I want to create request for...</p>
                <div class="d-flex gap-2 justify-content-center mt-2">
                    <a type="button" class="btn secondary-theme-btn" asp-area="Patient" asp-controller="Dashboard" asp-action="NewRequest">Me</a>
                    <a type="button" class="btn theme-btn" asp-area="Patient" asp-controller="Dashboard" asp-action="AnotherUserRequest" >Someone Else</a>
                </div>
            </div>
            
        </div>
    </div>
</div>

<script>
    $(".sortable").click(function () {
        var column = $(this).data('sort');
        var order = $(this).hasClass('asc') ? 'desc' : 'asc';
        $('.sortable').removeClass('asc desc');
        $(this).addClass(order);
        $(this).find('.sorting-icons').toggleClass('fa-chevron-up fa-chevron-down');
        sortTable(order);
    });

    function sortTable(order){
        const tbody = document.querySelector("tbody");
        const tr = document.querySelectorAll("tbody tr");
        const trArray = Array.from(tr);
        
        trArray.sort((a, b) => {
            const dateA = new Date(a.querySelector('.created-date').textContent);
            const dateB = new Date(b.querySelector('.created-date').textContent);
            
            if (order === 'asc') {
                return dateA - dateB;
            } else if (order === 'desc') {
                return dateB - dateA;
            }
    });

    // Re-append sorted table rows to the table body
    trArray.forEach(row => tbody.appendChild(row));
    }
</script>